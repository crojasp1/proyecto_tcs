// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
id Int @id @default(autoincrement())
Name String 
lastName String
password String
email String @unique
type Usertype @default(client)
}

enum Usertype{
  super_admin
  client
}

model Client{

id_numb Int @id
age Int
name String
lastName String
phone String
adress String
email String
gender String

UserGenerateId Int @unique
 userGeneral UserGeneral @relation(fields: [UserGenerateId], references: [id])

userVipId Int @unique//foreign key
userVip UserVip @relation(fields: [userVipId], references: [id])
}

model UserGeneral{
  id  Int @id @default(autoincrement())
  client Client?
}

model UserVip{
  id  Int @id @default(autoincrement())
  typeclient  TypeClient 
  companyName String
  //clients String[]
  amountOfClients Int
  numberCart Int

  client Client[]
  vehiculo Vehiculo[]
}

enum TypeClient{
  Legal
  Natuaral
}

model Vehiculo{
  id Int @id @default(autoincrement())
  brand String
  model String
  km Int
  capacity Int
  version String
  aditionalInfo String

  userVipId Int //foreign key
  userVip UserVip @relation(fields: [userVipId], references: [id])
}



//Salto de Evento relacionado con tiquete; FALTA relacionar usuarios con Tiket

model Event{
  id Int @id @default(autoincrement())
  name String
  date DateTime
  location String
  capacity Int
  type String // PREGUNTAR QUE ES?
  price Int
  amountTickets Int //Preguntar
  typeTicket TypeTickets
  description String
  imageUrl String //Pregunta
  status String 

  ticket Ticket[]
}

enum TypeTickets{
  vip
  general
}

model Ticket{
  id Int @id @default(autoincrement())
  consecutivo String
  state String

  eventId Int //foreign key
  event Event @relation(fields: [eventId], references: [id])

  shoppingCartId Int? @unique
  shoppingCart ShoppingCart? @relation(fields: [shoppingCartId],references: [id])
}

 model ShoppingCart{ //Preguntar relacion: Un carrito de C tiene varios tiquetes
  id Int @id @default(autoincrement())
  items String[]
  nombre String
  cedula Int

  ticket Ticket? @relation//foreign key
 }